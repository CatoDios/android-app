import dependencies.Deps
import config.Config

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath Deps.BuildPlugins.androidGradle
        classpath Deps.BuildPlugins.kotlinGradlePlugin
        classpath Deps.BuildPlugins.easyLauncherPlugin
        classpath Deps.BuildPlugins.jacocoCore
    }
}

plugins {
    id "com.gradle.build-scan" version "1.16"
    id "org.sonarqube" version "2.6.2"
}

buildScan {
    termsOfServiceUrl = Config.Build.scanTerms
    termsOfServiceAgree = Config.Build.scanTermsAgree
}

sonarqube {
    properties {
        property "sonar.projectKey", Config.Sonar.projectKey
        property "sonar.projectName", Config.Sonar.projectName
        property "sonar.projectVersion", Config.App.versionName
        property "sonar.projectDescription", Config.Sonar.projectDescription
        property "sonar.modules", Config.Sonar.modules
        property "sonar.sources", Config.Sonar.sources
        property "sonar.sourceEncoding", Config.Sonar.sourceEncoding
        property "sonar.exclusions", Config.Sonar.exclusions
        property "sonar.tests", Config.Sonar.test
        property "sonar.tests.inclusions", Config.Sonar.testInclusions

        def unit = fileTree(dir: project.projectDir, includes: ['**/*.exec']).files;
        def ui = fileTree(dir: project.projectDir, includes: ['**/*.ec']).files;
        unit.addAll(ui);
        def files = unit.join(", ");

        property "sonar.jacoco.reportPaths", files
        property "sonar.java.coveragePlugin", Config.Sonar.coveragePlugin
        property "sonar.java.binaries", "${project.buildDir}/tmp/kotlin-classes"
        property "sonar.java.test.binaries", "${project.buildDir}/tmp/kotlin-classes"
        property "sonar.junit.reportsPath", "${project.buildDir}/test-results/testDevelopUnitTest"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://oss.sonatype.org/content/repositories/releases" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
